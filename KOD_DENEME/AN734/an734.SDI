,,, LIST      p=16F877
,,,
,,,#include <p16f877.inc>
,,,
,,,; CONFIG1
,,,
,,,; __config 0xFE5C
,,,
00002007,0000,,__CONFIG _CONFIG1, _FOSC_INTOSC & _WDTE_ON & _PWRTE_ON & _MCLRE_ON & _CP_ON & _CPD_ON & _BOREN_ON & _CLK
,,,
,,,; CONFIG2
,,,
,,,; __config 0xFFFF
,,,
00002007,0000,, __CONFIG _CONFIG2, _WRT_OFF & _VCAPEN_OFF & _PLLEN_ON & _STVREN_ON & _BORV_LO & _LVP_ON
,,,
,,,
,,,
,,,#define I2C_ADDRESS     0x30                            ; Slave address
,,,
,,,#define RX_ELEMENTS             .32                                     ; number of allowable array elem
,,,
,,,
,,,
,,,;------------------------------------ variables--------------------------------------------------
,,,
,,,
,,,
,,,cblock 0x70                                                                     ; set up in shared memor
,,,
,,,                INDEX_I2C                                                       ; index used to point to
,,,
,,,                FIRST                                                           ; used to determine if i
,,,
,,,endc
,,,
,,,                udata
,,,
00000000,,,                I2C_ARRAY               res RX_ELEMENTS         ; array to write to, array memory size
,,,
,,,
,,,
,,,
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
,,,; The macro LOADFSR loads FSR1 with the I2C address and the I2C index value to read or write to
,,,
,,,; and makes code easier to read.
,,,
,,,;------------------------------------- LOADFSR macro -------------------------------------------
,,,
,,,
,,,
,,,LOADFSR macro   ADDRESS,INDEX                           ; ADDRESS = I2C_ARRAY, INDEX = INDEX_I2C
,,,
,,,                movlw   ADDRESS                                         ; load address
,,,
,,,                addwf   INDEX,W                                         ; add the index value to determi
,,,
,,,                movwf   FSR1L                                           ; load FSR1L with pointer info
,,,
,,,                clrf    FSR1H
,,,
,,,                endm
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
,,,
,,,
,,,
,,,
,,,;----------------------------------- start vectors ---------------------------------------------
,,,
00000000,,,                ORG     0x0000                                  ; reset vector
,,,
00000000,2840,,        goto    Main                            ; jump to main
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
,,,
,,,
,,,;----------------------------------- interrupt vector ------------------------------------------
,,,
00000004,,,        ORG     0x0004                                  ; interrupt vector
,,,
00000004,1283 1303,,                banksel PIR1
,,,
00000006,1D8C,,                btfss   PIR1,SSPIF                                      ; Is this a SSP interrupt?
,,,
00000007,28F0,,                goto    BUS_COLL                                        ; if not, bus collision int occu
,,,
00000008,1683 1303,,        banksel SSPSTAT
,,,
0000000A,1914,,                btfsc   SSPSTAT,2                                       ; is it a master read:
,,,
0000000B,286E,,                goto    READ                                            ; if so go here
,,,
0000000C,289B,,                goto    WRITE                                           ; if not, go here
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
,,,
,,,
,,,
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
,,,;                                                Main
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
00000040,,,                ORG             0x0040                                  ; start of Flash memory
,,,
,,,
,,,
00000040,,Main,Main
,,,
00000040,2043,,                call    INITIALIZE                                      ; set up uC
,,,
,,,
,,,
00000041,,LOOP,LOOP
,,,
00000041,0064,,                clrwdt                                                          ; infinite while loop
,,,
00000042,2841,,                goto    LOOP
,,,
,,,;------------------------------------- end main ------------------------------------------------
,,,
,,,
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
,,,;       Initialize: Sets up register values
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
00000043,,INITIALIZE,INITIALIZE
,,,
,,,;uC set up
,,,
00000043,1283 1303,,                banksel OSCCON
,,,
00000045,307A,,                movlw   b'01111010'                                     ; Internal OSC @ 16MHz, Internal
,,,
00000046,0080,,                movwf   OSCCON                      ; 4xPLL is enabled (set in config word)
,,,
00000047,30D7,,                movlw   b'11010111'                 ; WPU disabled, INT on rising edge, FOSC/4,
,,,
00000048,0081,,                movwf   OPTION_REG                                      ; Prescaler assigned to TMR0, pr
,,,
00000049,3017,,                movlw   b'00010111'                                     ; WDT prescaler 1:65536 period i
,,,
0000004A,0080,,                movwf   WDTCON
,,,
0000004B,1283 1303,,                banksel LATC
,,,
0000004D,0180,,        clrf    LATC                        ; Clear PORTC latches
,,,
0000004E,1683 1303,,                banksel TRISC
,,,
00000050,1587,,        bsf     TRISC,3                     ; Set RC3 to input (must be done)
,,,
00000051,1607,,        bsf     TRISC,4                     ; Set RC4 to input (must be done)
,,,
00000052,01F0,,                clrf    INDEX_I2C                   ; Clear the index pointer
,,,
00000053,01F1,,                clrf    FIRST                       ; Clear FIRST
,,,
00000054,1471,,                bsf             FIRST,0                     ; set bit 0 in FIRST
,,,
,,,;I2C set up
,,,
00000055,1683 1303,,                banksel SSPSTAT
,,,
00000057,1794,,                bsf             SSPSTAT,SMP                                     ; Slew rate control disa
,,,
00000058,3036,,                movlw   b'00110110'                                     ; Enable serial port, I2C slave
,,,
00000059,0080,,                movwf   SSPCON1
,,,
0000005A,1411,,                bsf             SSPCON2,SEN                                     ; enable clock stretchin
,,,
0000005B,1400,,                bsf             SSPCON3,BOEN                            ; SSPBUF is updated and NACK is
,,,
,,,                                                                                        ; for a received
,,,
,,,                                                                                        ; ignoring the s
,,,
0000005C,1400,,                bsf             SSPCON3,SDAHT                           ; Minimum of 300 ns hold time
,,,
0000005D,3030,,                movlw   I2C_ADDRESS                                     ; load the slave address
,,,
0000005E,0093,,                movwf   SSPADD
,,,
,,,
,,,
0000005F,1283 1303,,                banksel PIR1
,,,
00000061,118C,,                bcf             PIR1,SSPIF                                      ; clear the SSP interrup
,,,
00000062,1683 1303,,                banksel PIE1
,,,
00000064,158C,,                bsf             PIE1,SSPIE                                      ; enable SSP interrupts
,,,
00000065,1283 1303,,                banksel PIR2
,,,
00000067,118D,,                bcf             PIR2,BCLIF                                      ; clear the SSP interrup
,,,
00000068,1683 1303,,                banksel PIE2
,,,
0000006A,158D,,                bsf             PIE2,BCLIE                                      ; enable SSP interrupts
,,,
0000006B,170B,,                bsf             INTCON,PEIE                                     ; enable peripheral inte
,,,
0000006C,178B,,                bsf             INTCON,GIE                                      ; enable global interrup
,,,
0000006D,0008,,                return
,,,
,,,;------------------------------------- END INITIALIZE ------------------------------------------
,,,
,,,
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
,,,;                                Interrupt Service Routine (ISR)
,,,
,,,;-----------------------------------------------------------------------------------------------
,,,
0000006E,,READ,READ
,,,
0000006E,1683 1303,,                banksel SSPSTAT
,,,
00000070,1E94,,                btfss   SSPSTAT,5                                       ; was last byte an address or da
,,,
00000071,2873,,                goto    R_ADDRESS                                       ; if clear, it was an address
,,,
00000072,2887,,                goto    R_DATA                                          ; if set, it was data
,,,
,,,
,,,
00000073,,R_ADDRESS,R_ADDRESS
,,,
,,,                LOADFSR I2C_ARRAY,INDEX_I2C                     ; call LOADFSR macro
,,,- 
00000073,3000,,                - movlw   I2C_ARRAY                                       ; load address
,,,- 
00000074,0770,,                - addwf   INDEX_I2C,W                                     ; add the index value to determi
,,,- 
00000075,0080,,                - movwf   FSR1L                                           ; load FSR1L with pointer info
,,,- 
00000076,0180,,                - clrf    FSR1H
,,,- 
,,,
00000077,0800,,                movf    INDF1,W                                         ; move value into W to load to S
,,,
00000078,1283 1303,,                banksel SSPBUF
,,,
0000007A,0093,,                movwf   SSPBUF                                          ; load SSP buffer
,,,
0000007B,0AF0,,                incf    INDEX_I2C,F                                     ; increment INDEX_I2C 'pointer'
,,,
0000007C,1283 1303,,        banksel SSPCON1
,,,
0000007E,1B80,,                btfsc   SSPCON1,WCOL                            ; did a write collision occur?
,,,
0000007F,28E3,,                goto    WRITE_COLL                                      ; if so, go clear bit
,,,
00000080,1283 1303,,                banksel SSPCON1
,,,
00000082,1600,,                bsf             SSPCON1,CKP                                     ; release clock stretch
,,,
00000083,1283 1303,,                banksel PIR1
,,,
00000085,118C,,                bcf     PIR1,SSPIF                                      ; clear the SSP interrupt flag
,,,
00000086,28FA,,                goto    EXIT                                            ; Go to EXIT to return from inte
,,,
,,,
,,,
00000087,,R_DATA,R_DATA
,,,
,,,                LOADFSR I2C_ARRAY,INDEX_I2C                     ; call LOADFSR macro
,,,- 
00000087,3000,,                - movlw   I2C_ARRAY                                       ; load address
,,,- 
00000088,0770,,                - addwf   INDEX_I2C,W                                     ; add the index value to determi
,,,- 
00000089,0080,,                - movwf   FSR1L                                           ; load FSR1L with pointer info
,,,- 
0000008A,0180,,                - clrf    FSR1H
,,,- 
,,,
0000008B,0800,,                movf    INDF1,W                                         ; move value into W to load to S
,,,
0000008C,1283 1303,,                banksel SSPBUF
,,,
0000008E,0093,,                movwf   SSPBUF                                          ; load SSP buffer
,,,
0000008F,0AF0,,                incf    INDEX_I2C,F                                     ; increment INDEX_I2C 'pointer'
,,,
00000090,1283 1303,,        banksel SSPCON1
,,,
00000092,1B80,,                btfsc   SSPCON1,WCOL                            ; did a write collision occur?
,,,
00000093,28E3,,                goto    WRITE_COLL                                      ; if so, go clear bit
,,,
00000094,1283 1303,,                banksel SSPCON1
,,,
00000096,1600,,                bsf             SSPCON1,CKP                                     ; release clock stretch
,,,
00000097,1283 1303,,                banksel PIR1
,,,
00000099,118C,,                bcf     PIR1,SSPIF                                      ; clear the SSP interrupt flag
,,,
0000009A,28FA,,                goto    EXIT                                            ; Go to EXIT to return from inte
,,,
,,,
,,,
,,,
,,,
0000009B,,WRITE,WRITE
,,,
0000009B,1683 1303,,                banksel SSPSTAT
,,,
0000009D,1E94,,                btfss   SSPSTAT,5                                       ; was last byte an address or da
,,,
0000009E,28A0,,                goto    W_ADDRESS                                       ; if clear, it was an address
,,,
0000009F,28AB,,                goto    W_DATA                                          ; if set, it was data
,,,
,,,
,,,
000000A0,,W_ADDRESS,W_ADDRESS
,,,
000000A0,1471,,        bsf             FIRST,0                                         ; set bit 0 of FIRST
,,,
000000A1,1283 1303,,                banksel SSPBUF
,,,
000000A3,0813,,                movfw   SSPBUF                                          ; move the contents of the buffe
,,,
,,,                                            ; dummy read to clear the BF bit
,,,
000000A4,1283 1303,,                banksel SSPCON1
,,,
000000A6,1600,,                bsf             SSPCON1,CKP                                     ; release clock stretch
,,,
000000A7,1283 1303,,                banksel PIR1
,,,
000000A9,118C,,                bcf     PIR1,SSPIF                                      ; clear the SSP interrupt flag
,,,
000000AA,28FA,,                goto    EXIT                                            ; Go to EXIT to return from inte
,,,
,,,
,,,
000000AB,,W_DATA,W_DATA
,,,
000000AB,1C71,,                btfss   FIRST,0                                         ; is bit 0 set?
,,,
000000AC,28BB,,                goto    W_DATA_SUB                                      ; if clear, go write data
,,,
000000AD,1283 1303,,                banksel SSPBUF                                          ; if set, first data byte is loc
,,,
000000AF,0813,,                movfw   SSPBUF
,,,
000000B0,00F0,,                movwf   INDEX_I2C                                       ; load INDEX_I2C with data addre
,,,
000000B1,01F1,,                clrf    FIRST                                           ; clear the FIRST register
,,,
000000B2,1283 1303,,        banksel SSPCON1
,,,
000000B4,1B80,,                btfsc   SSPCON1,WCOL                            ; did a write collision occur?
,,,
000000B5,28E3,,                goto    WRITE_COLL                                      ; if so, go clear bit
,,,
000000B6,1600,,                bsf             SSPCON1,CKP                                     ; release clock stretch
,,,
000000B7,1283 1303,,                banksel PIR1
,,,
000000B9,118C,,                bcf     PIR1,SSPIF                                      ; clear the SSP interrupt flag
,,,
000000BA,28FA,,                goto    EXIT                                            ; Go to EXIT to return from inte
,,,
,,,
,,,
000000BB,,W_DATA_SUB,W_DATA_SUB
,,,
000000BB,0180,,                clrf    W                           ; clear W
,,,
000000BC,3020,,                movlw   RX_ELEMENTS                                     ; load array elements value
,,,
000000BD,1283 1303,,                banksel STATUS
,,,
000000BF,1903,,                btfsc   STATUS,Z                                        ; is Z clear?
,,,
000000C0,0270,,                subwf   INDEX_I2C,W                                     ; if Z = 1, subtract index from
,,,
000000C1,1283 1303,,                banksel STATUS
,,,
000000C3,1803,,                btfsc   STATUS,0                                        ; did a carry occur after subtra
,,,
000000C4,28D9,,                goto    NO_MEM_OVERWRITE                        ; if so, Master is trying to write to ma
,,,
,,,                LOADFSR I2C_ARRAY,INDEX_I2C                     ; call LOADFSR macro
,,,- 
000000C5,3000,,                - movlw   I2C_ARRAY                                       ; load address
,,,- 
000000C6,0770,,                - addwf   INDEX_I2C,W                                     ; add the index value to determi
,,,- 
000000C7,0080,,                - movwf   FSR1L                                           ; load FSR1L with pointer info
,,,- 
000000C8,0180,,                - clrf    FSR1H
,,,- 
,,,
000000C9,1283 1303,,                banksel SSPBUF
,,,
000000CB,0813,,                movfw   SSPBUF                                          ; move the contents of the buffe
,,,
000000CC,0080,,                movwf   INDF1                                           ; load INDF1 with data to write
,,,
000000CD,0AF0,,                incf    INDEX_I2C,F                                     ; increment 'pointer' to next me
,,,
000000CE,1283 1303,,        banksel SSPCON1
,,,
000000D0,1B80,,                btfsc   SSPCON1,WCOL                            ; did a write collision occur?
,,,
000000D1,28E3,,                goto    WRITE_COLL                                      ; if so, go clear bit
,,,
000000D2,1283 1303,,                banksel SSPCON1
,,,
000000D4,1600,,                bsf             SSPCON1,CKP                                     ; release clock stretch
,,,
000000D5,1283 1303,,                banksel PIR1
,,,
000000D7,118C,,                bcf     PIR1,SSPIF                                      ; clear the SSP interrupt flag
,,,
000000D8,28FA,,                goto    EXIT                                            ; Go to EXIT to return from inte
,,,
,,,
,,,
000000D9,,NO_MEM_OVERWRITE,NO_MEM_OVERWRITE
,,,
000000D9,1283 1303,,                banksel SSPBUF
,,,
000000DB,0813,,                movfw   SSPBUF                                          ; move SSP buffer to W
,,,
,,,                                                                ; clear buffer so no overwrite occurs
,,,
000000DC,1283 1303,,                banksel SSPCON1
,,,
000000DE,1600,,                bsf             SSPCON1,CKP                                     ; release clock stretch
,,,
000000DF,1283 1303,,                banksel PIR1
,,,
000000E1,118C,,                bcf     PIR1,SSPIF                                      ; clear the SSP interrupt flag
,,,
000000E2,28FA,,                goto    EXIT                                            ; Go to EXIT to return from inte
,,,
,,,
,,,
000000E3,,WRITE_COLL,WRITE_COLL
,,,
000000E3,1283 1303,,                banksel SSPCON1
,,,
000000E5,1380,,                bcf             SSPCON1,WCOL                            ; clear WCOL bit
,,,
000000E6,1283 1303,,                banksel SSPBUF
,,,
000000E8,0813,,                movfw   SSPBUF                                          ; move SSP buffer to W
,,,
,,,                                                                ; clear SSP buffer
,,,
000000E9,1283 1303,,                banksel SSPCON1
,,,
000000EB,1600,,                bsf             SSPCON1,CKP                                     ; release clock stretch
,,,
000000EC,1283 1303,,                banksel PIR1
,,,
000000EE,118C,,                bcf     PIR1,SSPIF                                      ; clear the SSP interrupt flag
,,,
000000EF,28FA,,                goto    EXIT                                            ; Go to EXIT to return from inte
,,,
,,,
,,,
000000F0,,BUS_COLL,BUS_COLL
,,,
000000F0,1283 1303,,                banksel SSPBUF
,,,
000000F2,0193,,                clrf    SSPBUF                                          ; clear the SSP buffer
,,,
000000F3,1283 1303,,                banksel PIR2
,,,
000000F5,118D,,                bcf             PIR2,BCLIF                                      ; clear the SSP interrup
,,,
000000F6,1283 1303,,                banksel SSPCON1
,,,
000000F8,1600,,                bsf             SSPCON1,CKP                                     ; release clock stretch
,,,
000000F9,28FA,,                goto    EXIT                                            ; Go to EXIT to return from inte
,,,
,,,
,,,
000000FA,,EXIT,EXIT
,,,
000000FA,0009,,        retfie                              ; Return from interrupt.
,,,
,,,                end                                                                     ; END OF PROGRAM
